import { Category } from '../../types/course';

export const pythonCourse: Category = {
  id: 'python',
  title: 'Python',
  description: 'Apprenez les bases de la programmation avec Python',
  icon: 'Code2',
  subCategories: [
    {
      id: 'bases-notions',
      title: 'Bases & Notions',
      description: 'Les concepts fondamentaux de Python',
      content: `
# Introduction √† Python

Python est un langage de programmation polyvalent et facile √† apprendre (c'est pour √ßa qu'on l'apprend au lyc√©e). Il est g√©n√©ralement bien appr√©ci√© car il est clair et lisible.

Mais le langage Python comme son nom l'indique est un langage, et comme tout langage il y a des choses √† apprendre üòê

## Comment √ßa marche ?

D√©j√† pour commencer je suis d√©sol√© de te l'apprendre, mais python ne comprend pas le fran√ßais üòÖ. Il faut donc lui parler dans sa langue, qui est un d√©riv√© de l'anglais üòÅ.
Mais ca va le faire t'es fort(e) en anglais üëÄ

Commencons simplement par les variables et les types de donn√©es. (C'est pas si compliqu√© que √ßa en a l'air)
Il existe plusieurs types de variables que tu vas devoir malheureusement apprendre, mais je suis l√† pour t'aider üòä.

**Voici les plus importantes √† connaitre :**
![Tableau des variables](${'/imgs/variables.png'})

## Variables et Types de Donn√©es

En Python, vous n'avez pas besoin de d√©clarer le type d'une variable. Le type est d√©termin√© automatiquement lors de l'affectation.

![Code Example](https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80)
      `,
      codeExamples: [
        {
          code: `# D√©claration de variables
age = 17
nom = "Alice"
moyenne = 15.5
est_etudiant = True`,
          explanations: {
            'age = 17': "Une variable de type entier (int)",
            'nom = "Alice"': "Une variable de type cha√Æne de caract√®res (str)",
            'moyenne = 15.5': "Une variable de type nombre d√©cimal (float)",
            'est_etudiant = True': "Une variable de type bool√©en (bool)"
          }
        }
      ],
      // pdfUrl: '/resources/python-bases.png' // TODO: Add the correct URL
    },
    {
      id: 'boucles',
      title: 'Boucles',
      description: 'Ma√Ætrisez les boucles for et while',
      content: `
# Les Boucles en Python

Les boucles permettent de r√©p√©ter des instructions plusieurs fois. Python propose deux types de boucles principales : for et while.

![Programming Loops](https://images.unsplash.com/photo-1555066931-4365d14bab8c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80)

## La boucle for

La boucle for est utilis√©e pour it√©rer sur une s√©quence (liste, tuple, cha√Æne de caract√®res...).

![Code Editor](https://images.unsplash.com/photo-1542831371-29b0f74f9713?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80)
      `,
      codeExamples: [
        {
          code: `# Exemple de boucle for
for i in range(5):
    print(i)
    
# Parcourir une liste
fruits = ["pomme", "banane", "orange"]
for fruit in fruits:
    print(fruit)`,
          explanations: {
            'for i in range(5):': "Boucle qui s'ex√©cute 5 fois (de 0 √† 4)",
            'print(i)': "Affiche la valeur de i √† chaque it√©ration",
            'fruits = ["pomme", "banane", "orange"]': "Cr√©ation d'une liste de fruits",
            'for fruit in fruits:': "Parcourt chaque √©l√©ment de la liste fruits"
          }
        }
      ],
      pdfUrl: '/resources/python-boucles.pdf'
    }
  ]
};